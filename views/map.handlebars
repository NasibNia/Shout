<div class="container-fluid" >
    <div class="row" id="map-page-header"></div>
        <div id="gradient" class="parallax">
            <nav class="navbar navbar-light bg-light">
                <a class="navbar-brand" href="#"></a>
            </nav>
            {{!-- <div class="container"> --}}
            <div class="row">
                <div class="col-md-1"></div>
                <div class="col-md-5">
                    <div class="card" style="width: 100%; height: 30rem;" id="maps"></div>
                    
                    </div>
                <div class="col-md-1"></div>
                <div class="col-md-4">
                    {{!-- <div class="row"> --}}
                        <form class="form-inline" id="todo-form">
                            <input type="text" class="form-control mb-2 mr-sm-2" id="shoutInput" placeholder="Shout something here">

                            <button type="submit" class="btn btn-primary todo-btn" id="shout">Shout!</button>
                        </form>
                        <button type="submit" class="btn btn-primary todo-btn" id="see-shouts">See Your Shouts!</button>  
                        <button id="signout" >Sign-out </button>
                    {{!-- </div> --}}
                    <div class="card container" style="width: 30rem;" id="shout-list">
                        <div class="card-body">
                        <h5 class="card-title">Shouts Around you</h5>
                        {{#each allShouts}} 
                            <div class="alert alert-primary" role="alert">
                                {{this.body}}
                                <br>
                                By: {{this.Users.0.name}}
                                <br>
                                {{this.time}}
                                <br>
                                <button class="btn btn-primary" id="{{this.count}}">{{this.count}}</button>
                                {{#unless this.status}}
                                <button class="btn btn-success join-btn" data-id="{{this.id}}" data-body="{{this.body}}" data-count={{this.count}} data-stat={{this.status}}>
                                    Join
                                </button>
                                {{/unless}}
                            </div>
                        {{/each}}                   
                        </div>
                    </div>
                </div>
                <div class="col-md-1"></div>
            </div>
        </div>

        <div class="card" style="width: 18rem; display:none" >
                <div class="card-body">
                <h5 class="card-title">All Shouts</h5>
                <div id="userPut">
                {{#each allShouts}} 
                    <div class="alert alert-primary" role="alert">
                        <div>|</div>
                        {{this.body}}
                    </div>
                {{/each}}    
                </div>        
            </div>
        </div>

    </div>
</div>


<script> 
$("#userPut").hide();
var allMarks = [];

var labels = [];
var c = document.getElementById("userPut");
labels.push(c);
var b = labels[0].innerText.split(/[|]/);
allMarks.push(b);
console.log(b);

    var map, popup, Popup;
var map;

function initMap() {

  var marker, i;
navigator.geolocation.getCurrentPosition(function(position)
{
    pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
    };

     map = new google.maps.Map(document.getElementById('maps'), {
        center: {
            lat: position.coords.latitude,
            lng: position.coords.longitude
            },
        zoom: 16
    });
    var infowindow = new google.maps.InfoWindow();
    var infowindow1 = new google.maps.InfoWindow();
    var icon = {
        url: '../assets/images/marker2.png',
        scaledSize: new google.maps.Size(80, 80),
    };
    var icon1 = {
        url: 'http://maps.google.com/mapfiles/ms/micons/green-dot.png',
        scaledSize: new google.maps.Size(60, 60),
    };
    allMarks.push(pos);
    console.log(allMarks[1]);
    for(var  i = 0; i < allMarks.length; i++)
    {
    var marker1 = new google.maps.Marker({
            map: map,
            icon: icon1,
            position: {lat: allMarks[i].lat, lng: allMarks[i].lng},
        }); 
        marker1.addListener('click', function() {
            infowindow1.setContent(b[b.length-2]);
            infowindow1.open(map, marker1);
        })
    }  
      marker = new google.maps.Marker({
      map: map,
      icon: icon,
      position: {lat: pos.lat, lng: pos.lng},
  });
  
   google.maps.event.addListener(marker, 'click', (function(marker, i) {
    return function() {
    infowindow.setContent(b[b.length-1]);
    infowindow.open(map, marker);
    }
    })(marker, i));
    setTimeout(function () {
        marker.setMap(null);
        delete marker;
        
    }, 3600000);
    return marker;
});

} 
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBCxMhwqVnzuWIkanMZKlN6nAXkn_x7YbM&callback=initMap">
</script>
